#!/usr/bin/perl test_driver
my @datasets = ('crp0', 'INO_up800', 'farntrans5', 'lipocalin', 'adh');
my @models = ('oops', 'zoops', 'tcm');
my $mast_ignore = [
  '^mast@(release|version)$',
  '^mast:model:command_line#value$',
  '^mast:model:host#value$',
  '^mast:model:when#value$',
  '^mast:runtime@(cycles|seconds)$',
  '^mast:motifs@(source|name|last_mod_date)$',
  '^mast:sequences:database@(source|name|last_mod_date)$'
];
my $counter = 1;
foreach my $dset (@datasets) {
  my $database = catfile('common', $dset . '.s');
  foreach my $mod (@models) {
    my $meme_file = catfile('meme', 'meme.'.$dset.'.'.$mod);
    my $out_dir = catdir('results', 'mast'.$counter);
    &test('mast'.$counter, '',
      'mast', '',
      [$meme_file, $database, 
        '-oc', $out_dir, '-nohtml', '-nostatus'],
      [
        {
          output => catfile($out_dir, 'mast.xml'),
          reference => catfile('mast', 'mast.'.$dset.'.'.$mod),
          type => 'xml', ignore => $mast_ignore
        }
      ],
      $out_dir
    );
    $counter++;
    if ($dset eq 'adh') {
      my $seq = 'mini-drosoph.s';
      $out_dir = catdir('results', 'mast'.$counter);
      &test('mast'.$counter, '',
        'mast', catfile('common', $seq),
        [$meme_file, '-', '-oc', $out_dir, '-nohtml', '-nostatus', 
          '-df', 'stdin', '-dna', '-seqp'],
        [
          {
            output => catfile($out_dir, 'mast.xml'),
            reference => catfile('mast', 'mast.'.$dset.'.'.$mod.'.'.$seq),
            type => 'xml', ignore => $mast_ignore
          }
        ],
        $out_dir
      );
      $counter++;
    }
  }
}

